"""
@author: hx
@func: 算法离线执行时间
三（五）种算法不同网络执行时间, 可以加上Q与DQN，但是时间很长，直接飞起
"""

import numpy as np
import matplotlib.pyplot as plt
# 时隙选择50（5ms）
flow = [400, 500, 600, 700, 800, 900, 1000]
# flow = [100, 300, 500, 700, 900]
greedy_A4C1 = [0.8177042007446289, 0.8794641494750977, 0.9816815853118896, 1.094167709350586
             1.1942086219787598, 1.290088415145874, 1.4295439720153809]
greedy_A7C2 = []
# 选取10次循环
tabu_A4C1 = [1.3701035976409912, 1.6596200466156006, 1.9036993980407715, 2.128061294555664,
           2.3913471698760986, 2.596308946609497, 2.905799150466919]
tabu_A7C2 = []
# 选取5次循环
GQ_DQN_A4C1 = [1.1390223503112793, 1.4418363571166992, 1.8141288757324219, 2.1629929542541504,
             2.620314836502075, 2.965676784515381, 3.352466344833374]
GQ_DQN_A7C2 = []

plt.plot(DQN_new_slot_5ms_modao, linewidth=2, label='DQN')
plt.plot(cq_new_slot_4ms, linewidth=2, label='Q-learning')
plt.plot(q_new_slot_4ms, linewidth=2, label='GQ-DQN')

plt.title("1000 Flows | T=4ms | Periods=[20,40,80]", fontsize=14)
plt.ylabel('Scheduled Flow Number', fontsize=14)
plt.xlabel('Episodes(Iterations)', fontsize=14)
plt.xlim(-50, 1000)
plt.ylim(500, 900)
plt.legend(prop = {'size': 12})
plt.savefig("picture2.svg")
plt.show()


'''
flow = [400, 500, 600, 700, 800, 900, 1000]
# flow = [100, 300, 500, 700, 900]
slot_choose = [20, 50]
greedy_20 = [0.3955864906311035, 0.680534839630127, 1.0981659889221191, 1.714566946029663, 2.4550983905792236]
greedy_50 = [0.3925654888153076, 0.6622440814971924, 0.8667705059051514, 1.0845441818237305, 1.3299086093902588]
# 选取10次循环
tabu_20 = [1.3701035976409912, 1.6596200466156006, 1.9036993980407715, 2.128061294555664, 2.3913471698760986, 2.596308946609497, 2.905799150466919]
tabu_50 = [1.4261364936828613, 1.6788620948791504, 1.7119779586791992, 2.186049461364746, 2.3980507850646973, ]
# 选取5次循环
GQ_DQN_20 = [0.2995631694793701, 0.852726936340332, 1.445906162261963, 2.1558382511138916, 2.939969301223755]
GQ_DQN_50 = []
'''